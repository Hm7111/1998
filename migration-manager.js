#!/usr/bin/env node
// ุณูุฑูุจุช ุฅุฏุงุฑุฉ ูููุงุช ุงููุฌุฑุฉ ุจุดูู ูุชูุฏู
const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
const crypto = require('crypto');

// ุงูุฅุนุฏุงุฏุงุช
const MIGRATIONS_DIR = path.join(process.cwd(), 'supabase/migrations');
const ARCHIVE_DIR = path.join(process.cwd(), 'supabase/migrations_archive');
const SUMMARY_DIR = path.join(process.cwd(), 'supabase/migrations_summary');
const KEEP_LATEST = 5; // ุนุฏุฏ ูููุงุช ุงููุฌุฑุฉ ุงูุญุฏูุซุฉ ุงูุชู ุณูุชู ุงูุงุญุชูุงุธ ุจูุง

// ุฅูุดุงุก ูุฌูุฏุงุช ุงููุธุงู ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
function createDirectories() {
  [MIGRATIONS_DIR, ARCHIVE_DIR, SUMMARY_DIR].forEach(dir => {
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
      console.log(`ุชู ุฅูุดุงุก ุงููุฌูุฏ: ${dir}`);
    }
  });
}

// ูุธููุฉ ูุชูุฎูุต ูุญุชูู ููู SQL ูุฅูุดุงุก ูุณุฎุฉ ููุฎุตุฉ
function summarizeMigrationFile(filePath) {
  console.log(`ุชูุฎูุต ููู ุงููุฌุฑุฉ: ${filePath}`);
  
  // ูุฑุงุกุฉ ูุญุชูู ุงูููู
  const content = fs.readFileSync(filePath, 'utf8');
  
  // ุงุณุชุฎุฑุงุฌ ุงูุชุนูููุงุช ุงูููุฌูุฏุฉ ูู ุงูููู (ููุชุฑุถ ุฃููุง ุดุฑุญ ูููุฌุฑุฉ)
  const commentRegex = /\/\*\s*([\s\S]*?)\s*\*\//g;
  const comments = [];
  let match;
  
  while ((match = commentRegex.exec(content)) !== null) {
    comments.push(match[1].trim());
  }
  
  // ุชูุฎูุต ุนูููุงุช SQL
  let summary = '';
  
  // ุนูููุงุช ุฅูุดุงุก ุงูุฌุฏุงูู
  const createTableMatches = content.match(/CREATE TABLE.*?;/gs) || [];
  if (createTableMatches.length > 0) {
    summary += '## ุฅูุดุงุก ุงูุฌุฏุงูู\n\n';
    createTableMatches.forEach(match => {
      const tableName = match.match(/CREATE TABLE.*?([a-zA-Z0-9_]+)/)?.[1];
      summary += `- ุฅูุดุงุก ุฌุฏูู \`${tableName}\`\n`;
    });
    summary += '\n';
  }
  
  // ุนูููุงุช ุชุนุฏูู ุงูุฌุฏุงูู
  const alterTableMatches = content.match(/ALTER TABLE.*?;/gs) || [];
  if (alterTableMatches.length > 0) {
    summary += '## ุชุนุฏูู ุงูุฌุฏุงูู\n\n';
    alterTableMatches.forEach(match => {
      const tableName = match.match(/ALTER TABLE.*?([a-zA-Z0-9_]+)/)?.[1];
      summary += `- ุชุนุฏูู ุฌุฏูู \`${tableName}\`\n`;
    });
    summary += '\n';
  }
  
  // ุนูููุงุช ุฅูุดุงุก ุงููุธุงุฆู
  const createFunctionMatches = content.match(/CREATE OR REPLACE FUNCTION.*?END;/gs) || [];
  if (createFunctionMatches.length > 0) {
    summary += '## ุฅูุดุงุก ุงููุธุงุฆู\n\n';
    createFunctionMatches.forEach(match => {
      const functionName = match.match(/CREATE OR REPLACE FUNCTION.*?([a-zA-Z0-9_]+)/)?.[1];
      summary += `- ุฅูุดุงุก ูุธููุฉ \`${functionName}\`\n`;
    });
    summary += '\n';
  }
  
  // ุนูููุงุช ุฅูุดุงุก ุงููุดุบูุงุช
  const createTriggerMatches = content.match(/CREATE TRIGGER.*?;/gs) || [];
  if (createTriggerMatches.length > 0) {
    summary += '## ุฅูุดุงุก ุงููุดุบูุงุช\n\n';
    createTriggerMatches.forEach(match => {
      const triggerName = match.match(/CREATE TRIGGER.*?([a-zA-Z0-9_]+)/)?.[1];
      summary += `- ุฅูุดุงุก ูุดุบู \`${triggerName}\`\n`;
    });
    summary += '\n';
  }
  
  // ุนูููุงุช ุชูููุฐ ุฑููุฒ SQL ูุฎุตุตุฉ
  const doBlockMatches = content.match(/DO \$\$([\s\S]*?)\$\$/gs) || [];
  if (doBlockMatches.length > 0) {
    summary += '## ุฑููุฒ SQL ุงููุฎุตุตุฉ\n\n';
    summary += `- ${doBlockMatches.length} ูุชูุฉ ุฑูุฒ ูุฎุตุตุฉ\n\n`;
  }
  
  // ุญุณุงุจ hash ููููู
  const fileHash = crypto.createHash('md5').update(content).digest('hex');
  
  // ุฅูุดุงุก ููุฎุต ููุงุฆู
  let finalSummary = `# ููุฎุต ููู ุงููุฌุฑุฉ: ${path.basename(filePath)}\n\n`;
  
  if (comments.length > 0) {
    finalSummary += `## ุงูุชุนูููุงุช ุงูุฃุตููุฉ\n\n${comments.join('\n\n')}\n\n`;
  }
  
  finalSummary += summary;
  finalSummary += `\n## ุงูุจูุงูุงุช ุงูุชูููุฉ\n\n`;
  finalSummary += `- ุงุณู ุงูููู: ${path.basename(filePath)}\n`;
  finalSummary += `- ุญุฌู ุงูููู: ${fs.statSync(filePath).size} ุจุงูุช\n`;
  finalSummary += `- MD5 Hash: ${fileHash}\n`;
  finalSummary += `- ุชุงุฑูุฎ ุงูููุฎุต: ${new Date().toLocaleString('ar-SA')}\n`;
  
  return finalSummary;
}

// ูุธููุฉ ูุฃุฑุดูุฉ ูููุงุช ุงููุฌุฑุฉ ุงููุฏููุฉ
function archiveMigrations() {
  console.log('๐๏ธ ุจุฏุก ุฃุฑุดูุฉ ูููุงุช ุงููุฌุฑุฉ ุงููุฏููุฉ...');
  
  // ุงูุชุฃูุฏ ูู ูุฌูุฏ ุงููุฌูุฏุงุช
  createDirectories();
  
  // ูุฑุงุกุฉ ูุงุฆูุฉ ูููุงุช ุงููุฌุฑุฉ
  const migrationFiles = fs.readdirSync(MIGRATIONS_DIR)
    .filter(file => file.endsWith('.sql'))
    .sort(); // ุชุฑุชูุจ ุงููููุงุช
  
  console.log(`๐ ุฅุฌูุงูู ุนุฏุฏ ูููุงุช ุงููุฌุฑุฉ: ${migrationFiles.length}`);
  
  // ุชุญุฏูุฏ ุงููููุงุช ุงูุชู ุณูุชู ุงูุงุญุชูุงุธ ุจูุง ูุงููููุงุช ุงูุชู ุณูุชู ุฃุฑุดูุชูุง
  const filesToKeep = migrationFiles.slice(-KEEP_LATEST);
  const filesToArchive = migrationFiles.slice(0, -KEEP_LATEST);
  
  console.log(`๐ ุณูุชู ุงูุงุญุชูุงุธ ุจู ${filesToKeep.length} ูููุงุช ูู ุงููุฌูุฏ ุงูุฑุฆูุณู`);
  console.log(`๐ฆ ุณูุชู ุฃุฑุดูุฉ ${filesToArchive.length} ูููุงุช`);
  
  // ุฅูุดุงุก ููู .gitignore ูู ูุฌูุฏ ุงูุฃุฑุดูู
  fs.writeFileSync(path.join(ARCHIVE_DIR, '.gitignore'), '*\n!.gitignore\n!README.md\n');
  
  // ุฅูุดุงุก ููู README ูู ูุฌูุฏ ุงูุฃุฑุดูู
  const readmeContent = `
# ุฃุฑุดูู ูููุงุช ุงููุฌุฑุฉ

ูุฐุง ุงููุฌูุฏ ูุญุชูู ุนูู ูููุงุช ุงููุฌุฑุฉ ุงููุฏููุฉ ุงูุชู ุชู ุฃุฑุดูุชูุง ููุชูููู ูู ุญุฌู ุงููุดุฑูุน.

## ุงุณุชุนุงุฏุฉ ุงููููุงุช

ูุงุณุชุนุงุฏุฉ ูููุงุช ุงููุฌุฑุฉุ ูู ุจุชูููุฐ ุงูุฃูุฑ ุงูุชุงูู:

\`\`\`
node restore-migrations.js
\`\`\`

## ููุงุญุธุงุช ูุงูุฉ

- ุชู ุงูุงุญุชูุงุธ ุจุขุฎุฑ ${KEEP_LATEST} ูููุงุช ูุฌุฑุฉ ูู ุงููุฌูุฏ ุงูุฑุฆูุณู.
- ุชุงุฑูุฎ ุงูุฃุฑุดูุฉ: ${new Date().toLocaleString('ar-SA')}
`;

  fs.writeFileSync(path.join(ARCHIVE_DIR, 'README.md'), readmeContent);
  
  // ุฃุฑุดูุฉ ุงููููุงุช ูุฅูุดุงุก ููุฎุตุงุช ููุง
  let archivedCount = 0;
  
  filesToArchive.forEach(file => {
    const sourcePath = path.join(MIGRATIONS_DIR, file);
    const archivePath = path.join(ARCHIVE_DIR, file);
    const summaryPath = path.join(SUMMARY_DIR, file.replace('.sql', '.md'));
    
    try {
      // ุชูุฎูุต ูุญุชูู ุงูููู
      const summary = summarizeMigrationFile(sourcePath);
      
      // ูุชุงุจุฉ ุงูููุฎุต
      fs.writeFileSync(summaryPath, summary);
      
      // ูุณุฎ ุงูููู ุฅูู ุงูุฃุฑุดูู
      fs.copyFileSync(sourcePath, archivePath);
      
      // ุญุฐู ุงูููู ูู ุงููุฌูุฏ ุงูุฑุฆูุณู
      fs.unlinkSync(sourcePath);
      
      archivedCount++;
    } catch (error) {
      console.error(`โ ุฎุทุฃ ูู ุฃุฑุดูุฉ ุงูููู ${file}:`, error.message);
    }
  });
  
  console.log(`โ ุชูุช ุฃุฑุดูุฉ ${archivedCount} ูููุงุช ุจูุฌุงุญ`);
  
  // ุฅูุดุงุก ููู ููุฑุณ ููููุฎุตุงุช
  const summaryFiles = fs.readdirSync(SUMMARY_DIR)
    .filter(file => file.endsWith('.md'))
    .sort();
  
  let summaryIndex = `# ููุฑุณ ููุฎุตุงุช ูููุงุช ุงููุฌุฑุฉ\n\n`;
  summaryIndex += `ุชู ุฅูุดุงุก ${summaryFiles.length} ููุฎุต ููููุงุช ุงููุฌุฑุฉ.\n\n`;
  summaryIndex += `## ูุงุฆูุฉ ุงูููุฎุตุงุช\n\n`;
  
  summaryFiles.forEach(file => {
    summaryIndex += `- [${file}](${file})\n`;
  });
  
  fs.writeFileSync(path.join(SUMMARY_DIR, 'README.md'), summaryIndex);
  
  return archivedCount;
}

// ูุธููุฉ ูุฅูุดุงุก ุณูุฑูุจุช ุงุณุชุนุงุฏุฉ ูููุงุช ุงููุฌุฑุฉ
function createRestoreScript() {
  console.log('๐ ุฅูุดุงุก ุณูุฑูุจุช ุงุณุชุนุงุฏุฉ ูููุงุช ุงููุฌุฑุฉ...');
  
  const scriptContent = `
// ุณูุฑูุจุช ูุงุณุชุนุงุฏุฉ ูููุงุช ุงููุฌุฑุฉ ูู ุงูุฃุฑุดูู
const fs = require('fs');
const path = require('path');

// ุชุญุฏูุฏ ุงููุณุงุฑุงุช
const MIGRATIONS_DIR = path.join(process.cwd(), 'supabase/migrations');
const ARCHIVE_DIR = path.join(process.cwd(), 'supabase/migrations_archive');

// ุงูุชุฃูุฏ ูู ูุฌูุฏ ูุฌูุฏ ุงูุฃุฑุดูู
if (!fs.existsSync(ARCHIVE_DIR)) {
  console.error('ูุฌูุฏ ุงูุฃุฑุดูู ุบูุฑ ููุฌูุฏ!');
  process.exit(1);
}

// ุงูุญุตูู ุนูู ูุงุฆูุฉ ูููุงุช ุงููุฌุฑุฉ ุงููุคุฑุดูุฉ
const archivedFiles = fs.readdirSync(ARCHIVE_DIR)
  .filter(file => file.endsWith('.sql'))
  .sort();

if (archivedFiles.length === 0) {
  console.log('ูุง ุชูุฌุฏ ูููุงุช ูุคุฑุดูุฉ ูุงุณุชุนุงุฏุชูุง.');
  process.exit(0);
}

console.log(\`ุชู ุงูุนุซูุฑ ุนูู \${archivedFiles.length} ูููุงุช ูู ุงูุฃุฑุดูู.\`);

// ุงุณุชุนุงุฏุฉ ุงููููุงุช ูู ุงูุฃุฑุดูู
let restoredCount = 0;
archivedFiles.forEach(file => {
  const sourcePath = path.join(ARCHIVE_DIR, file);
  const destPath = path.join(MIGRATIONS_DIR, file);
  
  // ุชุฎุทู ุงููููุงุช ุงูููุฌูุฏุฉ ุจุงููุนู ูู ูุฌูุฏ ุงููุฌุฑุฉ
  if (fs.existsSync(destPath)) {
    console.log(\`ุงูููู \${file} ููุฌูุฏ ุจุงููุนู ูู ูุฌูุฏ ุงููุฌุฑุฉุ ุชู ุชุฎุทูู.\`);
    return;
  }
  
  try {
    // ูุณุฎ ุงูููู ูู ุงูุฃุฑุดูู ุฅูู ูุฌูุฏ ุงููุฌุฑุฉ
    fs.copyFileSync(sourcePath, destPath);
    restoredCount++;
    console.log(\`ุชูุช ุงุณุชุนุงุฏุฉ: \${file}\`);
  } catch (error) {
    console.error(\`ุฎุทุฃ ูู ุงุณุชุนุงุฏุฉ ุงูููู \${file}:\`, error);
  }
});

console.log(\`ุชูุช ุงุณุชุนุงุฏุฉ \${restoredCount} ูููุงุช ุจูุฌุงุญ\`);
  `;
  
  fs.writeFileSync('restore-migrations.js', scriptContent);
  console.log('โ ุชู ุฅูุดุงุก ุณูุฑูุจุช ุงุณุชุนุงุฏุฉ ูููุงุช ุงููุฌุฑุฉ (restore-migrations.js)');
}

// ุชูููุฐ ุงูุฅุฌุฑุงุกุงุช
(async function main() {
  console.log('๐ ุจุฏุก ุชูููุฐ ุณูุฑูุจุช ุฅุฏุงุฑุฉ ูููุงุช ุงููุฌุฑุฉ...');
  
  // ุงูุชุฃูุฏ ูู ูุฌูุฏ ูุฌูุฏุงุช ุงููุธุงู
  createDirectories();
  
  // ุฃุฑุดูุฉ ูููุงุช ุงููุฌุฑุฉ ุงููุฏููุฉ
  const archivedCount = archiveMigrations();
  
  // ุฅูุดุงุก ุณูุฑูุจุช ุงูุงุณุชุนุงุฏุฉ
  if (archivedCount > 0) {
    createRestoreScript();
  }
  
  console.log('\nโจ ุงูุชููุช ุนูููุฉ ุฅุฏุงุฑุฉ ูููุงุช ุงููุฌุฑุฉ ุจูุฌุงุญ!');
})();